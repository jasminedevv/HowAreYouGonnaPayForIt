{"version":3,"sources":["ProgressTracker.js","AdjustmentSlider.js","PresetSetter.js","App.js","serviceWorker.js","index.js"],"names":["toHumanNumber","require","toHumanString","ProgressTracker","react_default","a","createElement","className","this","props","title","new","default_value","value","min","max","Component","AdjustmentSlider","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","key","name","spending","amount_cut","handleChange","bind","assertThisInitialized","event","_this2","console","log","updateCategory","target","setState","calculate","_this$state","type","size","onChange","PresetSetter","presets","dollars","proof_source","setProgram","index","item","push","App","categories","populateCategories","budget_function","amount_raised","program_name","program_target","json","results","new_category","amount","category","Number","new_amount_cut","forEach","_this3","sliders","_loop","slider","src_AdjustmentSlider","cat","calculateTotal","src_PresetSetter","src_ProgressTracker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af14906e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nvar HRNNum = require('human-readable-numbers');\nvar toHumanNumber = HRNNum.toHumanString;\n\nclass ProgressTracker extends Component {\n    \n    render() {\n      return (\n        <div className=\"ProgressTracker\">\n          <h3>{this.props.title}</h3>\n          <p>${ toHumanNumber( true, this.props.new )}  out of ${ toHumanNumber( true, this.props.default_value )}</p>\n  \n          <meter value={this.props.new} min=\"0\" max={this.props.default_value}></meter>\n        </div>\n      );\n    }\n  }\n  \n  export default ProgressTracker;","import React, { Component } from 'react';\nvar HRNNum = require('human-readable-numbers');\nvar toHumanNumber = HRNNum.toHumanString;\n\nclass AdjustmentSlider extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        key: props.name,\n        spending: props.spending,\n        amount_cut: props.amount_cut,\n      }\n      this.handleChange = this.handleChange.bind(this);\n    }\n  \n    handleChange(event) {\n      console.log(this.props)\n  \n      this.props.updateCategory(this.state.key, event.target.value);\n  \n      this.setState(\n        { amount_cut: event.target.value },\n        () => {\n          // put calculate in the setState callback to avoid weird bugs\n          this.props.calculate();\n        }\n      );\n    }\n  \n    render() {\n      const { key, spending, amount_cut } = this.state;\n      return (\n        <div className=\"category\">\n          <hr></hr>\n          <h3>{key}</h3>\n          <input\n            type=\"text\"\n            size=\"4\"\n            value={amount_cut}\n            onChange={this.handleChange}\n          ></input>\n          <label> cut out of ${toHumanNumber( true, spending )}</label>\n          <hr></hr>\n        </div>\n      )\n    }\n  }\n  \n  export default AdjustmentSlider;","import React, { Component } from 'react';\nimport { format } from 'url';\n\n\nclass PresetSetter extends Component {\n  constructor(props) {\n    super(props);\n    this.presets = [\n      {\n        name: \"Send Humans to Mars\",\n        dollars: 220000000000,\n        proof_source: \"https://qz.com/1273644/heres-how-nasa-and-spacex-chart-the-price-of-a-trip-to-mars/\",\n      },\n      {\n        name: \"Border Wall\",\n        dollars: 21600000000,\n        proof_source: \"https://www.reuters.com/article/us-usa-trump-immigration-wall-exclusive-idUSKBN15O2ZN\"\n      },\n      {\n        name: \"Aircraft Carrier\",\n        dollars: 12900000000,\n        proof_source: \"https://fas.org/sgp/crs/weapons/RS20643.pdf\",\n      }\n    ]\n    /** TODO: rename target and value to dollars where it refers to dollar amounts */\n    this.state = {\n      name: this.props.name,\n      dollars: this.props.dollars,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState(\n      {\n        name: this.presets[event.target.value].name,\n        dollars: this.presets[event.target.value].dollars\n      },\n      () => {\n        console.log(this.state.name, this.state.dollars);\n        this.props.setProgram(this.state.name, this.state.dollars);\n      }\n    )\n\n  }\n\n  render() {\n    let presets = [];\n    for (let index in this.presets) {\n      let item = (<option\n        key={index}\n        dollars={this.presets[index].dollars}\n        value={index}>{this.presets[index].name}</option>)\n      presets.push(item);\n    }\n    return (\n      <div className=\"TargetUpdater\">\n        <h1>Presets</h1>\n        <select onChange={this.handleChange} className=\"presets\">\n          {presets}\n        </select>\n        <br></br>\n      </div>\n    )\n  }\n}\n\n// class AddCustomProgram extends Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       display = false,\n\n//     }\n//   }\n//   render () {\n//     let display;\n//     this.display ? display = 0 : display = 1;\n//     return (\n//       <form>\n\n//       </form>\n//     )\n//   }\n// }\n\nexport default PresetSetter;","import React, { Component } from 'react';\nimport './App.css';\nimport ProgressTracker from './ProgressTracker';\n\nimport AdjustmentSlider from './AdjustmentSlider';\n\nimport PresetSetter from './PresetSetter';\n\nimport budget_function from './budget_function_2018.json';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    /** can be passed budget by function or agency (function for now) */\n    this.categories = this.populateCategories(budget_function);\n\n    this.state = {\n      // target: 1000,\n      amount_raised: 0,\n\n      // set the program we're raising money for\n      program_name: \"Example\",\n      program_target: 20,\n    }\n  }\n\n  /** Takes the json of categories and adds them to the App's this.categories */\n  populateCategories(json) {\n    let categories = []\n\n    for (let index in json.results) {\n      let new_category = {\n        name: json.results[index].name,\n        spending: json.results[index].amount,\n        amount_cut: 0,\n      }\n      categories.push(new_category);\n    }\n    return categories;\n  }\n\n  /** should be passed to a component to change what program we are raising money for */\n  setProgram(name, target) {\n    this.setState({ program_name: name, program_target: target });\n  }\n\n  updateCategory(name, amount) {\n    for (let index in this.categories) {\n      let category = this.categories[index];\n      if (category.name === name) {\n        let new_category = {\n          name: name,\n          spending: category.spending,\n          amount_cut: Number(amount),\n        }\n        // set the category at index to the new category\n        this.categories[index] = new_category;\n      }\n    }\n    console.log(this.categories)\n  }\n\n  /** goes through the categories and subtracts their values from the initial amount. Called every time a slider is adjusted */\n  calculateTotal() {\n    let new_amount_cut = 0;\n\n    this.categories.forEach((category) => {\n      new_amount_cut += category.amount_cut;\n    });\n\n    // console.log(this);\n    this.setState({ amount_raised: new_amount_cut }, () => {\n      console.log(\"I ran: \", this.state);\n    });\n  }\n\n  render() {\n    // TODO: move for loop block into its own function\n    let sliders = [];\n    for (let index in this.categories) {\n      let category = this.categories[index];\n      let slider = (\n        <AdjustmentSlider\n          key={category.name}\n          name={category.name}\n          spending={category.spending}\n          amount_cut={category.amount_cut}\n          // TODO rename name and cat: misleading\n          updateCategory={(name, cat) => {\n            this.updateCategory(name, cat)\n          }}\n          calculate={() => {\n            this.calculateTotal(category.name, category.amount_cut);\n          }}\n        />\n      )\n      sliders.push(slider);\n    }\n\n    return (\n      <div className=\"App\">\n        <PresetSetter\n          setProgram={(name, dollars) => {\n            this.setProgram(name, dollars)\n          }}\n        ></PresetSetter>\n        <header className=\"App-header\">\n          <div className=\"sliders\">\n            {sliders}\n          </div>\n          <ProgressTracker\n            title={this.state.program_name}\n            default_value={this.state.program_target}\n            new={this.state.amount_raised}\n          />\n          <br></br>\n          <br></br>\n        </header>\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}